version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@1.3.1
  aws-s3: circleci/aws-s3@3.0
  eb: circleci/aws-elastic-beanstalk@2.0.1

jobs:
  build:
    docker:
      - image: cimg/node:16.14

    steps:
      - checkout
      - eb/setup
      - aws-cli/setup

      - run:
          name: Frontend Install
          command: npm run frontend:install

      - run:
          name: Frontend Build
          command: npm run frontend:build

      - run:
          name: Backend Install
          command: npm run backend:install

      - run:
          name: Backend Build
          command: npm run backend:build

      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: AWS_ACCESS_KEY_ID_BLUE
          aws-region: AWS_REGION_BLUE
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_BLUE

          from: udagram/udagram-frontend/www
          to: "s3://udagram-mn14/"

      - run:
          name: Backend Deploy
          command: |
            eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
            eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            eb setenv POSTGRES_DB=$POSTGRES_DB
            eb setenv POSTGRES_HOST=$POSTGRES_HOST
            eb setenv DB_PORT=$DB_PORT
            eb setenv PORT=$PORT
            eb setenv JWT_SECRET=$JWT_SECRET
            eb setenv PORT=$PORT
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            aws s3 mv ./udagram/udagram-api/www/Archive.zip s3://elasticbeanstalk-us-east-1-847017200233/app/app-dev-$TIMESTAMP.zip
            aws elasticbeanstalk create-application-version --region us-east-1 \
              --application-name udagram-api --version-label development-$TIMESTAMP \
              --source-bundle S3Bucket=elasticbeanstalk-us-east-1-847017200233,S3Key=app/app-dev-$TIMESTAMP.zip
            aws elasticbeanstalk update-environment --region us-east-1 --environment-name Udagramapi-env \
              --version-label development-$TIMESTAMP
workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
